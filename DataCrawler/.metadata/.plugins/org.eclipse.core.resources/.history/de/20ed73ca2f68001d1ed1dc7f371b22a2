package DataCrawler;
import java.awt.print.Printable;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.RowFilter;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class Links {
// ============================= Properties ==================================
	private ArrayList<String> linksHistoricalCharacter = new ArrayList<String>();
	private ArrayList<String> kings = new ArrayList<String>(); 

// ============================= Methods ==================================
/**
 * Collect Historical Character's name from https://nguoikesu.com
 * @param url
 * @return ArrayList<String> 
 * @throws IOException
 */
	public  Links() {
		kings = new ArrayList<String>();
	}
	
	public ArrayList<String> getLinksHistoricalCharacter() {
		return this.linksHistoricalCharacter;
	}
	
	public ArrayList<String> getLinksHistoricalCharacters(String url, String sub) throws IOException{
		System.setProperty("http.proxyhost", "127.0.0.1");
		System.setProperty("http.proxyport", "8080");
		
		ArrayList<String> pagination = new ArrayList<String>();
		
		final Document doc = Jsoup.connect(url)
				.ignoreContentType(true)
				.timeout(0)
				.get();

//		Get all pages related
		pagination.add(url);		
		for(Element x: doc.select("a[class=pagenav]")) {
			pagination.add(url.substring(0,21) + x.attr("href"));
		}
// 		Append info from all pages
		for(int i = 0; i < pagination.size(); i++) {
			Document subDoc = Jsoup.connect(pagination.get(i))
					.ignoreContentType(true)
					.timeout(0)
					.get();
			for(Element x: subDoc.select("h2 a")) {
				linksHistoricalCharacter.add(sub + x.attr("href"));
			}
		}
		return this.linksHistoricalCharacter;
	}
	
	public ArrayList<String> getKings() {
		return this.kings;
	}
	
	
	public ArrayList<String> collectKings(String url,String sub)  throws IOException{
		System.setProperty("http.proxyhost", "127.0.0.1");
		System.setProperty("http.proxyport", "8080");
		final Document doc = Jsoup.connect(url)
				.ignoreContentType(true)
				.timeout(0)
				.get();
		
		for(Element table: doc.select("table")) {
			if(!table.select("tr th:nth-of-type(2):containsOwn(Vua)").text().equals("")) {
				for(Element link : table.select("tr td:nth-of-type(2) a[href^=/]")) {				
					kings.add(sub + link.attr("href"));
				}
			}
		}
		return this.kings;
	}
	
	
	
}
